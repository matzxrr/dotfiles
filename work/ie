#!/bin/bash

export SVN_EDITOR=hx
export SVNROOT=svn+ssh://kama.indexengines.com/svn

GIT_ICON='îœ¥'

function svndiff {
    svn diff "$@" | diff-so-fancy | less --tabs=4 -RFX
}

function zypper {
    echo "cd tools/rpm && wget http://kama/svn/jenkins/regcodes"
    echo "cd tools/rpm && sudo sh provision_zypper.sh -m regcodes"
}

function prompt_ie_git() {
    # Check if we are in a Git repository
    if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        # Find the root of the Git repository
        repo_root=$(git rev-parse --show-toplevel)
        
        # Check if origin contains indexengines.com
        git_remote=$(git config --get remote.origin.url 2>/dev/null)
        if [[ $git_remote == *"indexengines.com"* ]]; then
            # Check if configure.in exists in the new location (root/ie/configure.in)
            configure_in="$repo_root/ie/configure.in"
            if [ -f "$configure_in" ]; then
                # Extract version from AC_INIT macro in configure.in
                VERSION=$(grep -oP 'AC_INIT\([^)]*\)' $configure_in | sed -E 's/.*,([^,]+),.*/\1/')
            
                # Print version
                if [ -n "$VERSION" ]; then
                    echo " ${1}(v$VERSION)"
                fi
            fi
        fi
    fi
}

env () {
    echo "REACT_APP_BACKEND_URL=https://server1-blade11.indexengines.com/ierest" > .env
}

function testui () {
    pytest -v -s -m smoke
}

function copyresults() {
    cat ctrf-report.json | clip.exe
}

# These helper functions were written by Eric
# Create comment file for backport commit
# bp -b 8.5.0 123422
# bp -a 15231
bp () {
     if [ $1 = '-b' ] ; then
         shift
         URL=svn+ssh://kama/svn/branches/$1/ie
         NAME=$1
         shift

     else
         URL=svn+ssh://kama/svn/trunk/ie
         NAME="the trunk"
     fi
     if [ $1 = '-a' ] ; then

         shift
         svn merge -c $1 ${URL}
         # append back-ported revision
         head -n 1 .bplog | sed "s/from ${NAME}:/+ r$1 from ${NAME}:/" > .bplog.new
         tail -n +2 .bplog >> .bplog.new
         mv .bplog.new .bplog
     else
         svn merge -c $1 ${URL}
         # first line describes backported revisions
         echo "Backport r$1 from ${NAME}:" > .bplog
     fi

     # Add original comment, excluding the first two lines added to 'svn log' output by svn

     # and the last revisions: line

     svn log -r $1 ${URL} | tail -n +3 | head -n -1 >> .bplog
}

# Commit using generate comment file
# When no arguments are specified, all changed files in working copy are committed
# When specified, svn commit is limited to specified files and / or directories

cbp () {
     svn commit -F .bplog $@
}
