# RUST ------------------------------------------------------------------------
[[language]]
name = "rust"
# -----------------------------------------------------------------------------

# TOML ------------------------------------------------------------------------
[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
# -----------------------------------------------------------------------------

# PYTHON ----------------------------------------------------------------------
[[language]]
name = "python"
language-servers = ["pyright"]
# -----------------------------------------------------------------------------

# TYPESCRIPT ------------------------------------------------------------------
[[language]]
name = "typescript"
language-servers = [
  "typescript-language-server",
  "eslint",
  "snippets-ls",
]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }

[[language]]
name = "tsx"
language-servers = [
  "typescript-language-server",
  "eslint",
  "emmet-ls",
  "snippets-ls",
]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
# -----------------------------------------------------------------------------

# JAVASCRIPT ------------------------------------------------------------------
[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
grammar = "javascript"
formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
# -----------------------------------------------------------------------------

# JSON ------------------------------------------------------------------------
[[language]]
name = "json"
language-servers = ["jsonls"]
formatter = { command = 'npx', args = ["prettier", "--parser", "json"] }
# -----------------------------------------------------------------------------

# CSS -------------------------------------------------------------------------
[[language]]
name = "css"
formatter = { command = 'npx', args = ["prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "emmet-ls"]
# -----------------------------------------------------------------------------

# YAML ------------------------------------------------------------------------
[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
language-servers = [ "yaml-language-server"]
injection-regex = "yml|yaml"
formatter = { command = 'npx', args = ["prettier", "--parser", "yaml"] }
# -----------------------------------------------------------------------------

###############################################################################
############################# LSP CONFIGS #####################################
###############################################################################

# Yaml ------------------------------------------------------------------------
[language-server.yaml-language-server.config.yaml]
format = { enable = false }
validation = true

# Rust Analyzer ---------------------------------------------------------------
[language-server.rust-analyzer.config]
inlayHints = { parameterHints = { enable = false } }
check = { command = "clippy", features = "all" }
diagnostics = { experimental = { enable = true } }
hover = { actions = { enable = true } }
typing = { autoClosingAngleBrackets = { enable = true } }
cargo = { allFeatures = true }
procMacro = { enable = true }

# VSCode CSS ------------------------------------------------------------------
[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

# VSCode JSON -----------------------------------------------------------------
[language-server.jsonls]
args = ["--stdio"]
command = "vscode-json-language-server"

[language-server.jsonls.config]
provideFormatter = true

[language-server.jsonls.config.json]
validate = { enable = true }
format = { enable = true }

[[language-server.jsonls.config.json.schemas]]
fileMatch = ["tsconfig.json", "tsconfig.*.json"]
url = "https://json.schemastore.org/tsconfig.json"

# Emmet HTML Completion -------------------------------------------------------
[language-server.emmet-ls]
args = ["--stdio"]
command = "emmet-language-server"

# ESLint ----------------------------------------------------------------------
[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

# Typescript ------------------------------------------------------------------
[language-server.typescript-language-server.config]
documentFormatting = false
hostInfo = "helix"

[language-server.typescript-language-server.config.preferences]
quotePreference = 'single'

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = false
includeInlayFunctionLikeReturnTypeHints = false
includeInlayFunctionParameterTypeHints = false
includeInlayParameterNameHints = "none"
includeInlayParameterNameHintsWhenArgumentMatchesName = false
includeInlayPropertyDeclarationTypeHints = false
includeInlayVariableTypeHints = false

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = false

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = false
includeInlayFunctionLikeReturnTypeHints = false
includeInlayFunctionParameterTypeHints = false
includeInlayParameterNameHints = "none"
includeInlayParameterNameHintsWhenArgumentMatchesName = false
includeInlayPropertyDeclarationTypeHints = false
includeInlayVariableTypeHints = false
